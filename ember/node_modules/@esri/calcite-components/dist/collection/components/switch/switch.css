/* mixins & extensions */
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes in-down {
  0% {
    opacity: 0;
    transform: translate3D(0, -5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-up {
  0% {
    opacity: 0;
    transform: translate3D(0, 5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-scale {
  0% {
    opacity: 0;
    transform: scale3D(0.95, 0.95, 1);
  }
  100% {
    opacity: 1;
    transform: scale3D(1, 1, 1);
  }
}
:root {
  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));
  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);
  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));
}

.calcite-animate {
  opacity: 0;
  animation-fill-mode: both;
  animation-duration: var(--calcite-animation-timing);
}

.calcite-animate__in {
  animation-name: in;
}

.calcite-animate__in-down {
  animation-name: in-down;
}

.calcite-animate__in-up {
  animation-name: in-up;
}

.calcite-animate__in-scale {
  animation-name: in-scale;
}

/**
* Currently only used in Checkbox.
*/
:root {
  --calcite-popper-transition: var(--calcite-animation-timing);
}

:host([hidden]) {
  display: none;
}

:host([scale=s]) .container {
  height: 0.75rem;
}
:host([scale=s]) .track {
  height: 0.75rem;
  width: 1.5rem;
}
:host([scale=s]) .handle {
  height: 0.5rem;
  width: 0.5rem;
}

:host([scale=m]) .container {
  height: 1rem;
}
:host([scale=m]) .track {
  height: 1rem;
  width: 2rem;
}
:host([scale=m]) .handle {
  height: 0.75rem;
  width: 0.75rem;
}

:host([scale=l]) .container {
  height: 1.5rem;
}
:host([scale=l]) .track {
  height: 1.5rem;
  width: 3rem;
}
:host([scale=l]) .handle {
  height: 1.25rem;
  width: 1.25rem;
}

:host {
  position: relative;
  display: inline-block;
  width: auto;
  cursor: pointer;
  -webkit-user-select: none;
          user-select: none;
  vertical-align: middle;
  tap-highlight-color: transparent;
}

:host([disabled]) {
  pointer-events: none;
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-ui-opacity-disabled);
}
:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

:host {
  width: auto;
  outline-offset: 0;
  outline-color: transparent;
  transition: outline-offset 100ms ease-in-out, outline-color 100ms ease-in-out;
}

.track {
  pointer-events: none;
  position: relative;
  box-sizing: border-box;
  display: inline-block;
  border-radius: 9999px;
  border-width: 1px;
  border-style: solid;
  border-color: var(--calcite-ui-border-2);
  background-color: var(--calcite-ui-foreground-2);
  vertical-align: top;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.handle {
  pointer-events: none;
  position: absolute;
  display: block;
  border-radius: 9999px;
  border-width: 2px;
  border-style: solid;
  border-color: var(--calcite-ui-border-input);
  background-color: var(--calcite-ui-foreground-1);
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: -1px;
  inset-inline: -1px auto;
}

:host(:hover) .handle, :host(:focus) .handle {
  border-color: var(--calcite-ui-brand);
  box-shadow: inset 0 0 0 1px var(--calcite-ui-brand);
}

:host([checked]) .track {
  border-color: var(--calcite-ui-brand-hover);
  background-color: var(--calcite-ui-brand);
}
:host([checked]) .handle {
  border-color: var(--calcite-ui-brand);
  inset-inline: auto -1px;
}

:host([checked]:hover) .track {
  border-color: var(--calcite-ui-brand-hover);
  background-color: var(--calcite-ui-brand);
}
:host([checked]:hover) .handle {
  border-color: var(--calcite-ui-brand-hover);
  box-shadow: inset 0 0 0 1px var(--calcite-ui-brand-hover);
}

@media (forced-colors: active) {
  :host([checked]) .track {
    background-color: canvasText;
  }
}
.container:focus {
  outline: 2px solid var(--calcite-ui-brand);
  outline-offset: 2px;
}

::slotted(input[slot=hidden-form-input]) {
  bottom: 0 !important;
  left: 0 !important;
  margin: 0 !important;
  opacity: 0 !important;
  outline: none !important;
  padding: 0 !important;
  position: absolute !important;
  right: 0 !important;
  top: 0 !important;
  transform: none !important;
  -webkit-appearance: none !important;
  z-index: -1 !important;
}