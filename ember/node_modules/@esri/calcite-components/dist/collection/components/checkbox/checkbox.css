/* mixins & extensions */
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes in-down {
  0% {
    opacity: 0;
    transform: translate3D(0, -5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-up {
  0% {
    opacity: 0;
    transform: translate3D(0, 5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-scale {
  0% {
    opacity: 0;
    transform: scale3D(0.95, 0.95, 1);
  }
  100% {
    opacity: 1;
    transform: scale3D(1, 1, 1);
  }
}
:root {
  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));
  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);
  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));
}

.calcite-animate {
  opacity: 0;
  animation-fill-mode: both;
  animation-duration: var(--calcite-animation-timing);
}

.calcite-animate__in {
  animation-name: in;
}

.calcite-animate__in-down {
  animation-name: in-down;
}

.calcite-animate__in-up {
  animation-name: in-up;
}

.calcite-animate__in-scale {
  animation-name: in-scale;
}

/**
* Currently only used in Checkbox.
*/
:root {
  --calcite-popper-transition: var(--calcite-animation-timing);
}

:host([hidden]) {
  display: none;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-checkbox-size: the width and height of the checkbox
*/
:host([scale=s]) {
  --calcite-checkbox-size: 0.75rem;
}

:host([scale=m]) {
  --calcite-checkbox-size: var(--calcite-font-size--1);
}

:host([scale=l]) {
  --calcite-checkbox-size: 1rem;
}

:host {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  -webkit-user-select: none;
          user-select: none;
  -webkit-tap-highlight-color: transparent;
}
:host .check-svg {
  pointer-events: none;
  box-sizing: border-box;
  display: block;
  overflow: hidden;
  background-color: var(--calcite-ui-foreground-1);
  fill: currentColor;
  stroke: currentColor;
  stroke-width: 1;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  width: var(--calcite-checkbox-size);
  height: var(--calcite-checkbox-size);
  box-shadow: inset 0 0 0 1px var(--calcite-ui-border-input);
  color: var(--calcite-ui-background);
}

:host([checked]) .check-svg, :host([indeterminate]) .check-svg {
  background-color: var(--calcite-ui-brand);
  box-shadow: inset 0 0 0 1px var(--calcite-ui-brand);
}

:host([hovered]) .toggle .check-svg,
:host .toggle:hover .check-svg {
  box-shadow: inset 0 0 0 2px var(--calcite-ui-brand);
}

:host .toggle:focus .check-svg,
:host .toggle:active .check-svg {
  box-shadow: inset 0 0 0 1px var(--calcite-ui-brand), 0 0 0 2px var(--calcite-ui-foreground-1), 0 0 0 4px var(--calcite-ui-brand);
  transition: var(--calcite-animation-timing);
}

.toggle:focus-visible {
  outline: none;
}

:host([disabled]) {
  pointer-events: none;
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-ui-opacity-disabled);
}
:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

::slotted(input[slot=hidden-form-input]) {
  bottom: 0 !important;
  left: 0 !important;
  margin: 0 !important;
  opacity: 0 !important;
  outline: none !important;
  padding: 0 !important;
  position: absolute !important;
  right: 0 !important;
  top: 0 !important;
  transform: none !important;
  -webkit-appearance: none !important;
  z-index: -1 !important;
}