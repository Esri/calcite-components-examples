/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.0-beta.82
 */
import{a as sanitizeExponentialNumberString,i as isValidNumber,b as sanitizeDecimalString}from"./number-237e74a9.js";var locales=["ar","bg","bs","ca","cs","da","de","de-CH","el","en","en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","nb","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"];var allDecimalsExceptLast=new RegExp("[.](?=.*[.])","g");var everythingExceptNumbersDecimalsAndMinusSigns=new RegExp("[^0-9-.]","g");var defaultGroupSeparator=new RegExp(",","g");function createLocaleNumberFormatter(e){return new Intl.NumberFormat(e,{minimumFractionDigits:0,maximumFractionDigits:20})}function delocalizeNumberString(e,r){return sanitizeExponentialNumberString(e,(function(e){var a=e.replace(getMinusSign(r),"-").replace(getGroupSeparator(r),"").replace(getDecimalSeparator(r),".").replace(allDecimalsExceptLast,"").replace(everythingExceptNumbersDecimalsAndMinusSigns,"");return isValidNumber(a)?a:e}))}function getGroupSeparator(e){var r=createLocaleNumberFormatter(e);var a=r.formatToParts(1234567);var t=a.find((function(e){return e.type==="group"})).value;return t.trim().length===0?" ":t}function getDecimalSeparator(e){var r=createLocaleNumberFormatter(e);var a=r.formatToParts(1.1);return a.find((function(e){return e.type==="decimal"})).value}function getMinusSign(e){var r=createLocaleNumberFormatter(e);var a=r.formatToParts(-9);return a.find((function(e){return e.type==="minusSign"})).value}function localizeNumberString(e,r,a){if(a===void 0){a=false}return sanitizeExponentialNumberString(e,(function(e){if(e){var t=Number(sanitizeDecimalString(e.replace(defaultGroupSeparator,"")));if(!isNaN(t)){var n=createLocaleNumberFormatter(r);var i=n.formatToParts(t);var u=i.map((function(e){var t=e.type,n=e.value;switch(t){case"group":return a?getGroupSeparator(r):"";case"decimal":return getDecimalSeparator(r);case"minusSign":return getMinusSign(r);default:return n}})).reduce((function(e,r){return e+r}));return u}}return e}))}export{locales as a,delocalizeNumberString as d,getDecimalSeparator as g,localizeNumberString as l};