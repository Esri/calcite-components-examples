{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\nconst getTabindex = function (node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if (\n      (isScope ||\n        /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      isNaN(parseInt(node.getAttribute('tabindex'), 10))\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabindex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getTabindex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (el, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot,\n    });\n  } else {\n    candidates = getCandidates(\n      el,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable };\n"],"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","isInert","node","lookUp","inertAtt","getAttribute","inert","result","parentNode","isContentEditable","attValue","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","getTabindex","isScope","tabIndex","test","isNaN","parseInt","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isNodeAttached","nodeRoot","nodeRootHost","host","attached","contains","isZeroArea","getBoundingClientRect","width","height","isHidden","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable"],"mappings":"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"}