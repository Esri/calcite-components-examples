/* mixins & extensions */
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes in-down {
  0% {
    opacity: 0;
    transform: translate3D(0, -5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-up {
  0% {
    opacity: 0;
    transform: translate3D(0, 5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-scale {
  0% {
    opacity: 0;
    transform: scale3D(0.95, 0.95, 1);
  }
  100% {
    opacity: 1;
    transform: scale3D(1, 1, 1);
  }
}
:root {
  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));
  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);
  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));
}

.calcite-animate {
  opacity: 0;
  animation-fill-mode: both;
  animation-duration: var(--calcite-animation-timing);
}

.calcite-animate__in {
  animation-name: in;
}

.calcite-animate__in-down {
  animation-name: in-down;
}

.calcite-animate__in-up {
  animation-name: in-up;
}

.calcite-animate__in-scale {
  animation-name: in-scale;
}

@media (prefers-reduced-motion: reduce) {
  :root {
    --calcite-internal-duration-factor: 0.01;
  }
}
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host {
  /* Base ":host" styles for the component */
  box-sizing: border-box;
  background-color: var(--calcite-ui-foreground-1);
  color: var(--calcite-ui-text-2);
  font-size: var(--calcite-font-size--1);
}
:host * {
  box-sizing: border-box;
}

:root {
  --calcite-floating-ui-transition: var(--calcite-animation-timing);
  --calcite-floating-ui-z-index: 600;
}

:host([hidden]) {
  display: none;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-action-bar-expanded-max-width: optionally specify the expanded max width of the action bar when in "vertical" layout.
*/
:host {
  pointer-events: auto;
  display: inline-flex;
  align-self: stretch;
  background: transparent;
  --calcite-action-bar-expanded-max-width: auto;
}

:host([layout=vertical]) {
  flex-direction: column;
}

:host([layout=horizontal]) {
  flex-direction: row;
}

:host([layout=vertical][overflow-actions-disabled]) {
  overflow-y: auto;
}

:host([layout=horizontal][overflow-actions-disabled]) {
  overflow-x: auto;
}

:host([layout=vertical][expanded]) {
  max-inline-size: var(--calcite-action-bar-expanded-max-width);
}

::slotted(calcite-action-group) {
  border-width: 0px;
  border-block-end-width: 1px;
  border-style: solid;
  border-color: var(--calcite-ui-border-3);
}

:host([layout=horizontal]) ::slotted(calcite-action-group) {
  border-width: 0px;
  border-inline-end-width: 1px;
  border-style: solid;
}

::slotted(calcite-action-group:last-child) {
  border-block-end-width: 0px;
  border-inline-end-width: 0px;
}

.action-group--bottom {
  flex-grow: 1;
  justify-content: flex-end;
  padding-block-end: 0px;
  padding-inline-end: 0px;
}