import { FocusTrap as _FocusTrap } from "focus-trap";
/**
 * Defines interface for components with a focus trap.
 */
export interface FocusTrapComponent {
  /**
   * When `true`, prevents focus trapping.
   */
  focusTrapDisabled: boolean;
  /**
   * The focus trap instance.
   */
  focusTrap: FocusTrap;
  /**
   * The focus trap element.
   */
  focusTrapEl: HTMLElement;
  /**
   * Method to update the element(s) that are used within the FocusTrap component.
   */
  updateFocusTrapElements: () => Promise<void>;
}
export declare type FocusTrap = _FocusTrap;
/**
 * Helper to set up the FocusTrap component.
 *
 * @param {FocusTrapComponent} component The FocusTrap component.
 */
export declare function connectFocusTrap(component: FocusTrapComponent): void;
/**
 * Helper to activate the FocusTrap component.
 *
 * @param {FocusTrapComponent} component The FocusTrap component.
 */
export declare function activateFocusTrap(component: FocusTrapComponent): void;
/**
 * Helper to deactivate the FocusTrap component.
 *
 * @param {FocusTrapComponent} component The FocusTrap component.
 */
export declare function deactivateFocusTrap(component: FocusTrapComponent): void;
/**
 * Helper to update the element(s) that are used within the FocusTrap component.
 *
 * @param {FocusTrapComponent} component The FocusTrap component.
 * @example
 * const modal = document.querySelector("calcite-modal");
 * const input = document.createElement("calcite-input");
 * content.appendChild(input);
 * await input.componentOnReady();
 * await modal.updateFocusTrapElements();
 * requestAnimationFrame(() => input.setFocus());
 */
export declare function updateFocusTrapElements(component: FocusTrapComponent): void;
